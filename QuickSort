#include <stdio.h>

void swap(int A[], int i, int j) {
    int temp = A[i];
    A[i] = A[j];
    A[j] = temp;
}

int partition(int A[], int l, int h) {
    int pivot = A[l];
    int i = l + 1;
    int j = h;

    while (i <= j) {
        while (i <= h && A[i] <= pivot)
            i++;
        while (j >= l && A[j] > pivot)
            j--;

        if (i < j)
            swap(A, i, j);
    }

    swap(A, l, j);
    return j;
}

void quickSort(int A[], int l, int h) {
    if (l < h) {
        int pi = partition(A, l, h);
        quickSort(A, l, pi - 1);
        quickSort(A, pi + 1, h);
    }
}

int main() {
    int A[100], n;
    printf("Enter number of elements: ");
    scanf("%d", &n);

    printf("Enter elements:\n");
    for (int i = 0; i < n; i++)
        scanf("%d", &A[i]);

    quickSort(A, 0, n - 1);

    printf("Sorted array:\n");
    for (int i = 0; i < n; i++)
        printf("%d ", A[i]);

    return 0;
}
